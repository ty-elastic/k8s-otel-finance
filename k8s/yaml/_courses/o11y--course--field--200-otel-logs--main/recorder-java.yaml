---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: trading
    service: recorder-java
  name: recorder-java-config
  namespace: trading
data:
  spring.jpa.properties.hibernate.session_factory.statement_inspector: "com.example.sqlcommenter.Inspector"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: trading
    service: recorder-java
  name: recorder-java
  namespace: trading
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trading
      service: recorder-java
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-java: "opentelemetry-operator-system/elastic-instrumentation"
        #io.opentelemetry.discovery.logs/enabled: "true"
        #com.example.logs/format: "otlpjson"
      labels:
        app: trading
        service: recorder-java
    spec:
      volumes:
        - name: lib
          emptyDir: {}
      initContainers:
        - name: sqlcommentor
          image: $REPO/sqlcommenter:$COURSE
          command: ["cp"]
          args: ["/lib/com-example-sqlcommentor.jar", "/usr/src/app/lib/com-example-sqlcommentor.jar"]
          volumeMounts:
            - name: lib
              mountPath: /usr/src/app/lib
      containers:
        - name: recorder-java
          volumeMounts:
            - name: lib
              mountPath: /usr/src/app/lib
          envFrom:
            - configMapRef:
                name: recorder-java-config
          env:
            # - name: OTEL_LOGS_EXPORTER
            #   value: 'experimental-otlp/stdout'
            - name: OTEL_INSTRUMENTATION_LOGBACK_APPENDER_EXPERIMENTAL_LOG_ATTRIBUTES
              value: 'true'
            - name: OTEL_INSTRUMENTATION_LOGBACK_APPENDER_EXPERIMENTAL_CAPTURE_KEY_VALUE_PAIR_ATTRIBUTES
              value: 'true'

            - name: JAVA_TOOL_OPTIONS
              value: "-Dloader.path=/usr/src/app/lib"
            - name: KAFKA_ENABLED
              value: "false"
            - name: POSTGRES_HOST
              value: postgresql
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_USER
              value: admin
          image: $REPO/recorder-java:$COURSE
          imagePullPolicy: Always
          ports:
            - containerPort: 9003
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: trading
    service: recorder-java
  name: recorder-java
  namespace: trading
spec:
  ports:
    - name: recorder-java
      port: 9003
      targetPort: 9003
  selector:
    app: trading
    service: recorder-java
---