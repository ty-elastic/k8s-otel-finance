source /opt/workshops/elastic-retry.sh

/opt/workshops/clone-code.sh -r ty-elastic/k8s-otel-finance -b $INSTRUQT_TRACK_SLUG -d false

/opt/workshops/vscode-start.sh

export $(curl http://kubernetes-vm:9000/env | xargs)
export $(cat /workspace/workshop/instruqt/$INSTRUQT_TRACK_SLUG/build_vars.sh | xargs)

output=$(curl -s -X POST --header "Authorization: Basic $ELASTICSEARCH_AUTH_BASE64"  -H 'Content-Type: application/json' "$ELASTICSEARCH_URL/_security/api_key" -d '
{
    "name": "kubernetes_otel_onboarding",
    "metadata": {
        "application": "logs",
        "managed": true
    },
    "role_descriptors": {
        "standalone_agent": {
            "cluster": [
            "monitor"
            ],
            "indices": [
            {
                "names": [
                "logs-*-*",
                "metrics-*-*",
                "traces-*-*"
                ],
                "privileges": [
                "auto_configure",
                "create_doc"
                ],
                "allow_restricted_indices": false
            }
            ],
            "applications": [],
            "run_as": [],
            "metadata": {},
            "transient_metadata": {
            "enabled": true
            }
        }
    }
}
')

ELASTICSEARCH_APIKEY=$(echo $output | jq -r '.encoded')

helm repo add open-telemetry 'https://open-telemetry.github.io/opentelemetry-helm-charts' --force-update

kubectl create namespace opentelemetry-operator-system
kubectl create secret generic elastic-secret-otel \
  --namespace opentelemetry-operator-system \
  --from-literal=elastic_endpoint='http://elasticsearch-es-http.default.svc:9200' \
  --from-literal=elastic_api_key=$ELASTICSEARCH_APIKEY
helm upgrade --install opentelemetry-kube-stack open-telemetry/opentelemetry-kube-stack \
  --namespace opentelemetry-operator-system \
  --values 'https://raw.githubusercontent.com/elastic/elastic-agent/refs/tags/v9.0.2/deploy/helm/edot-collector/kube-stack/values.yaml' \
  --version '0.3.9'

sleep 30

# patch -i /workspace/src/trader/patch/remove_attributes.diff /workspace/src/trader/app.py
# patch -i /workspace/src/trader/patch/remove_blrp.diff /workspace/src/trader/app.py
# patch -i /workspace/src/recorder-java/patch/remove_bsp.diff /workspace/src/recorder-java/Dockerfile
# patch -F 3 -i /workspace/src/recorder-java/patch/remove_blrp.diff /workspace/src/recorder-java/Dockerfile
# docker compose build
# docker compose up -d

for dir in /workspace/workshop/src/*/; do
  if [[ -d "$dir" ]]; then
    service=$(basename "$dir")
    echo $service
    if [ -d "$dir/variants/$INSTRUQT_TRACK_SLUG" ]; then
        echo "patching"
        cd /workspace/workshop/src/$service
        patch < variants/$INSTRUQT_TRACK_SLUG/init.patch
    fi
  fi
done
cd /workspace/workshop
./install.sh

retry_command_lin curl --silent --fail --output /dev/null --header "Authorization: Basic $ELASTICSEARCH_AUTH_BASE64" "$ELASTICSEARCH_URL/_cat/indices/.ds-traces-*?allow_no_indices=false"
